"""Adiciona event_id e tabelas de associação para categorias e configurações de preço

Revision ID: 36e8e4ad5504
Revises: 8fde3d3afded
Create Date: 2024-09-19 23:40:09.804971

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '36e8e4ad5504'
down_revision: Union[str, None] = '8fde3d3afded'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('event_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_configurations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('event_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('STANDARD', 'BATCH', name='pricetype'), nullable=False),
    sa.Column('applies_to', sa.Enum('GLOBAL', 'CATEGORIA', 'SUBCATEGORIA', name='appliesto'), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_configs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('TEMPORAL', 'QUANTITY', name='batchtype'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('start_quantity', sa.Integer(), nullable=True),
    sa.Column('end_quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('price_configuration_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['price_configuration_id'], ['price_configurations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_configuration_categories',
    sa.Column('price_configuration_id', sa.String(length=36), nullable=False),
    sa.Column('category_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['price_configuration_id'], ['price_configurations.id'], ),
    sa.PrimaryKeyConstraint('price_configuration_id', 'category_id')
    )
    op.create_table('subcategories',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_configuration_subcategories',
    sa.Column('price_configuration_id', sa.String(length=36), nullable=False),
    sa.Column('subcategory_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['price_configuration_id'], ['price_configurations.id'], ),
    sa.ForeignKeyConstraint(['subcategory_id'], ['subcategories.id'], ),
    sa.PrimaryKeyConstraint('price_configuration_id', 'subcategory_id')
    )

def downgrade() -> None:
    pass
